{"name":"Ruster","tagline":"Control your Redis Cluster from the command line","body":"# ruster - a simple Redis Cluster Administration tool\r\n\r\nControl your [Redis][redis] [Cluster][redis-cluster] from the command\r\nline.\r\n\r\n## Usage\r\n\r\n`ruster` relies on [redic][redic], the lightweight Redis client. It\r\ncurrently allows to create a cluster, add and remove nodes, and\r\nexecute a command in all nodes in a cluster.\r\n\r\n### Create a cluster\r\n\r\n```\r\n$ ruster create ip:port [ip:port...]\r\n```\r\n\r\nCreates a cluster with all the indicated nodes, and automatically\r\nshards Redis Cluster 16,384 slots evenly among all of them.\r\n\r\n### Add a node\r\n\r\n```\r\n$ ruster add cluster_ip:port ip:port\r\n```\r\n\r\nAdds `ip:port` to the cluster. `cluster_ip:port` must be one of the\r\nnodes that are already part of the cluster.\r\n\r\n### Remove a node\r\n\r\n```\r\n$ ruster remove cluster_ip:port ip:port\r\n```\r\n\r\nRemoves `ip:port` from the cluster. `cluster_ip:port` must be one of the\r\nnodes that are already part of the cluster. The only requirement is\r\nthat `ip:port` isn't the same as `cluster_ip:port`.\r\n\r\n**NOTE**: removing a node that has slots assigned leaves the cluster\r\nin a broken state. These slots should be resharded before removing the\r\nnode.\r\n\r\n### Execute a command in all nodes\r\n\r\n```\r\n$ ruster call ip:port [CMD ...]\r\n```\r\n\r\nExecutes the [Redis command][redis-commands] in all nodes, displaying\r\nit's result in STDOUT.\r\n\r\n### Reshard\r\n\r\n```\r\n$ ruster reshard cluster_ip:port slots target_ip:port source_ip:port [...]\r\n```\r\n\r\nReshards the cluster at `cluster_ip:port`, by moving `slots` slots\r\nfrom several `source_ip:port` to `target_ip:port`.\r\n\r\n## TODO\r\n\r\n* documentation\r\n* resharding\r\n* add interactive interface\r\n* add REPL?\r\n* fix cluster\r\n* check cluster state\r\n* cluster information\r\n* ASSERTIONS\r\n\r\n## Thanks\r\n\r\nThis work wouldn't have been possible without [@antirez][@antirez]\r\nawesome work on Redis, and [@soveran][@soveran] and [@cyx][@cyx] for\r\ntheir super lightweight Redis client.\r\n\r\nThank you to my dear friends [@lucasefe][@lucasefe], [@pote][@pote]\r\nand [@elcuervo][@cuerbot], who joined the\r\n[conversation on Twitter][nameme] while I was looking for a name.\r\n\r\nAlso, I'd like to thank to [Eruca Sativa][eruca] and [Cirse][cirse]\r\nfor the music that's currently blasting my speakers while I write\r\nthis.\r\n\r\n[redis]: http://redis.io/\r\n[redis-cluster]: http://redis.io/topics/cluster-tutorial\r\n[redic]: https://github.com/amakawa/redic\r\n[@antirez]: https://twitter.com/antirez\r\n[@soveran]: https://twitter.com/soveran\r\n[@cyx]: https://twitter.com/cyx\r\n[eruca]: https://twitter.com/ErucaSativa\r\n[cirse]: https://twitter.com/cirsemusic\r\n[redis-commands]: http://redis.io/commands\r\n[@cuerbot]: https://twitter.com/cuerbot\r\n[@pote]: https://twitter.com/poteland\r\n[@lucasefe]: https://twitter.com/lucasefe\r\n[nameme]: https://twitter.com/inkel/status/444638064393326592\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}